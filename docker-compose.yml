version: "3"
services:
  conflictvisualizer-gui:
    build:
      context: gui
      dockerfile: Dockerfile
      args:
        NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
        NEXTAUTH_URL: ${NEXTAUTH_URL}
        KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
        KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
        KEYCLOAK_REALM: ${KEYCLOAK_REALM}
        MAPBOX_TOKEN: ${MAPBOX_TOKEN}
        GUI_SERVER_URL: ${GUI_SERVER_URL}
        AUTH_SERVER_URL: ${AUTH_SERVER_URL}
        API_SERVER_URL: ${API_SERVER_URL}
        API_WS_URL: ${API_WS_URL}
    restart: always
    ports:
      - "3000:3000"
    image: jpo-conflictvisualizer-gui:latest
    logging:
      options:
        max-size: "10m"
        max-file: "5"

  keycloak:
    build:
      context: keycloak
      dockerfile: Dockerfile
    container_name: jpo-conflictvisualizer-keycloak
    restart: always
    depends_on:
      - postgres
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      GUI_SERVER_URL: ${GUI_SERVER_URL}
      API_SERVER_URL: ${API_SERVER_URL}
      # WEBAPP_ORIGIN: ${AUTH_SERVER_URL}
      # WEBAPP_CM_ORIGIN: ${AUTH_SERVER_URL}
      # KC_HEALTH_ENABLED: true
      # KC_DB: postgres
      # KC_DB_URL: jdbc:postgresql://${PG_DB_HOST}/postgres?currentSchema=keycloak
      # KC_DB_URL_PROVIDER: jdbc:postgresql://${PG_DB_HOST}/postgres
      # KC_DB_USERNAME: ${PG_DB_USER}
      # KC_DB_PASSWORD: ${PG_DB_PASS}
      # KC_HOSTNAME: ${KEYCLOAK_DOMAIN}
      # KEYCLOAK_API_CLIENT_SECRET_KEY: ${KEYCLOAK_API_CLIENT_SECRET_KEY}
      # KEYCLOAK_CM_API_CLIENT_SECRET_KEY: ${KEYCLOAK_CM_API_CLIENT_SECRET_KEY}
      # GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      # GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
    command:
      - start-dev
      - --log-level=INFO
      - --import-realm
      - --proxy edge
    volumes:
      - keycloak:/opt/keycloak/data/
      - ${DOCKER_HOST_DIR}/keycloak/realm.json:/tmp/realm.json
    ports:
      - "8084:8080"

  postgres:
    image: postgis/postgis:15-master
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${PG_DB_USER}
      POSTGRES_PASSWORD: ${PG_DB_PASS}
    volumes:
      - pgdb:/var/lib/postgresql/data
      - ./postgres/sql_scripts:/docker-entrypoint-initdb.d
    logging:
      options:
        max-size: '10m'

  # pgadmin:
  #   container_name: pgadmin
  #   image: "dpage/pgadmin4:latest"
  #   environment:
  #     POSTGRES_USER: ${PG_DB_USER}
  #     POSTGRES_PASSWORD: ${PG_DB_PASS}
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  #   ports:
  #     - "5050:80"

  conflictvisualizer-api:
    build:
      context: api
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    image: jpo-conflictvisualizer-api:latest
    restart: always
    environment:
      AUTH_SERVER_URL: ${AUTH_SERVER_URL}
      DB_HOST_IP: ${DB_HOST_IP}
      DB_HOST_PORT: ${DB_HOST_PORT}
      SPRING_KAFKA_BOOTSTRAPSERVERS: ${KAFKA_BROKER_IP}:${KAFKA_BROKER_PORT}
      CM_SERVER_URL: ${CM_SERVER_URL}
      load: "false"
      KAFKA_TYPE: "ON-PREM"
      ACM_CONFIG_FILE: adm.properties
      ACM_LOG_TO_CONSOLE: true
      ACM_LOG_TO_FILE: false
      ACM_LOG_LEVEL: DEBUG
      CM_MONGO_API_USERNAME: ${CM_MONGO_API_USERNAME}
      CM_MONGO_API_PASSWORD: ${CM_MONGO_API_PASSWORD}

      KEYCLOAK_CLIENT_API_ID: ${KEYCLOAK_CLIENT_API_ID}
      KEYCLOAK_CLIENT_API_SECRET: ${KEYCLOAK_CLIENT_API_SECRET}
      
      #KAFKA_BROKER_IP: ${KAFKA_BROKER_IP}
      #KAFKA_BROKER_PORT: ${KAFKA_BROKER_PORT}
    logging:
      options:
        max-size: "10m"
        max-file: "5"
    depends_on:
      keycloak:
        condition: service_started

volumes:
  keycloak:
  pgdb:
    driver: local
